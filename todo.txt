Beginner Questions

    Hello World:

        Write a Bash script that prints "Hello, World!" to the terminal.

    User Input:

        Write a script that asks the user for their name and then greets them with "Hello, [name]!".

    File Existence Check:

        Write a script that checks if a file exists. If it does, print "File exists"; otherwise, print "File does not exist".

    Simple Calculator:

        Create a script that takes two numbers as input and performs addition, subtraction, multiplication, and division.

    Loop Through Numbers:

        Write a script that prints numbers from 1 to 10 using a for loop.

    Check Even or Odd:

        Write a script that takes a number as input and checks if it is even or odd.

    List Files in a Directory:

        Write a script that lists all files in the current directory.

    Backup Script:

        Create a script that backs up a file by copying it to a new file with a .bak extension.

Intermediate Questions

    Count Lines in a File:

        Write a script that counts the number of lines in a file.

    Find the Largest Number:

        Write a script that takes three numbers as input and prints the largest one.

    Password Generator:

        Create a script that generates a random password of a specified length.

    File Search:

        Write a script that searches for a specific string in all files within a directory.

    Rename Files:

        Write a script that renames all .txt files in a directory to .md.

    Disk Usage:

        Write a script that checks the disk usage of the current directory and prints a warning if it exceeds a certain threshold (e.g., 90%).

    Process Management:

        Write a script that lists all running processes and allows the user to kill a process by entering its PID.

    Log File Monitoring:

        Write a script that monitors a log file in real-time and prints new lines as they are added.

Advanced Questions

    System Monitoring Tool:

        Create a script that monitors CPU usage, memory usage, and disk usage, and logs the data to a file.

    Automated Backup:

        Write a script that automatically backs up a directory to a remote server using rsync or scp.

    Web Scraping:

        Write a script that uses curl or wget to fetch data from a website and extract specific information (e.g., headlines from a news site).

    Database Backup:

        Write a script that backs up a MySQL database and compresses the backup file.

    Network Scanner:

        Create a script that scans a network for active IP addresses using ping.

    Interactive Menu:

        Write a script that displays an interactive menu with options to perform various system checks (e.g., memory usage, CPU load, etc.).

    File Encryption:

        Write a script that encrypts a file using gpg and asks the user for a passphrase.

    Automated Deployment:

        Create a script that automates the deployment of a web application (e.g., pulling code from Git, installing dependencies, and restarting the server).

Expert Questions

    Custom Shell:

        Write a simple custom shell that can execute basic commands like ls, cd, and exit.

    Process Scheduler:

        Create a script that schedules and manages background tasks using cron.

    Load Balancer Simulation:

        Write a script that simulates a simple load balancer by distributing requests across multiple servers.

    Log Analyzer:

        Write a script that analyzes a log file and generates a summary report (e.g., number of errors, most frequent IP addresses, etc.).

    File Synchronization:

        Create a script that synchronizes files between two directories, ensuring that changes in one directory are mirrored in the other.

    API Interaction:

        Write a script that interacts with a REST API (e.g., fetching data from a public API and processing it).

    Docker Management:

        Write a script that automates the management of Docker containers (e.g., starting, stopping, and removing containers).

    Custom Command-Line Tool:

        Create a custom command-line tool that performs a specific task (e.g., a todo list manager or a weather fetcher).
